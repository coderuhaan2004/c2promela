{
    "Process Types": {
        "name": "proctype",
        "example": "\n        proctype A()\n        {   \n            byte state;         // Local variable declaration\n            state = 3;          // Assignment statement\n        }\n\n        proctype B()\n        {   \n            byte counter = 0;   // Local variable with initialization\n            counter = counter + 1;\n        }\n        ",
        "scenario": "Used to define process types that specify the behavior of concurrent processes."
    },
    "Global Variables": {
        "name": "global variables",
        "example": "\n        byte state = 2;          // Global variable with initialization\n\n        proctype A()\n        {   \n            (state == 1) -> state = 3;  // Conditional assignment\n        }\n\n        proctype B()\n        {   \n            state = state - 1;          // Decrementing global variable\n        }\n        ",
        "scenario": "Used to define variables that can be accessed by multiple processes concurrently."
    },
    "Local Variables": {
        "name": "local variable declaration",
        "example": "\n        proctype Test()\n        {\n            byte counter = 5;     // Local variable with initialization\n            counter = counter + 1;\n        }\n        \",\n        \"scenario\": \"Used to declare variables that are only accessible within a specific process.\"\n    },\n    \"Assignments\": {\n        \"name\": \"assignment statement\",\n        \"example\": \"\n        proctype Example()\n        {\n            byte x = 1;           // Initialize variable\n            x = x + 2;            // Increment by 2\n        }\n        ",
        "scenario": "Used to assign values to variables or update their values during process execution."
    },
    "Statement Separators": {
        "name": "semicolon and arrow",
        "example": "\n        proctype Example()\n        {\n            byte val = 0;\n\n            val = 1;             // Semicolon separator\n            (val == 1) -> val = 2;  // Arrow separator with condition\n        }\n        ",
        "scenario": "Used to separate multiple statements in a process body. The arrow can indicate causality."
    },
    "Process Instantiation": {
        "name": "run statement",
        "example": "\n        init \n        {\n            run A();         // Instantiate process A\n            run B();         // Instantiate process B\n        }\n\n        proctype A(byte state; short foo)\n        {\n            (state == 1) -> state = foo;\n        }\n\n        init\n        {\n            run A(1, 3);    // Pass parameters to process A\n        }\n       ",
        "scenario": "Used to create and execute instances of processes in the Promela model."
    },
    "Macro Definitions": {
        "name": "#define",
        "example": "\"\n    #define true    1         // Define true as constant 1\n    #define false   0         // Define false as constant 0\n    #define Aturn   false     // Define Aturn as false\n    #define Bturn   true      // Define Bturn as true\n    ",
        "scenario": "Used to define constant values or symbolic names in Promela specifications, similar to C-style macros."
    }
}